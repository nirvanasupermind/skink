statements = expr, { NEWLINE, expr };
expr = var_expr | block | assignment_expr ;
var_expr = "var", IDENTIFIER, "=", expr;
block = "{", program, "}";
assignment_expr = relational_expr, { "=", relational_expr };
xor_expr = bitor_expr, { "^", bitor_expr };
or_expr = bitand_expr, { "|", bitand_expr };
and_expr = bitxor_expr, { "&", equality_expr };
bitxor_expr = bitor_expr, { "^", bitor_expr };
bitor_expr = bitand_expr, { "|", bitand_expr };
bitand_expr = equality_expr, { "&", equality_expr };
equality_expr = relational_expr, { ("==" | "!="), relational_expr };
relational_expr = additive_expr, { ("<" | ">" | "<=" | ">="), additive_expr };
additive_expr = multiplicative_expr, { ("+" | "-"), multiplicative_expr };
multiplicative_expr = unary_expr, { ("*" | "/" | "%"), unary_expr };
unary_expr = { "+" | "-" | "!" | "~" }, atom;
atom = INT | FLOAT | IDENTIFIER | brace_expr;
brace_expr = "(", expr, ")";