statements = [expr, { NEWLINE, expr }];
expr = var_expr | term, { (PLUS | MINUS), term };
var_expr = "var", IDENTIFIER, "=", expr;
assignment_expr = or_expr, { EQ, or_expr };
or_expr = xor_expr, { OR, xor_expr };
xor_expr = and_expr, { XOR, and_expr };
and_expr = bitor_expr, { AND, bitor_expr };
bitor_expr = bitxor_expr, { BITOR, bitxor_expr };
bitxor_expr = bitand_expr, { BITXOR, bitand_expr };
bitand_expr = equality_expr, { BITAND, equality_expr };
equality_expr = relational_expr, { (EE | NE), relation_expr };
relational_expr = additive_expr, { (LT | GT | LE | GE), additive_expr };
additive_expr = term, { (PLUS | MINUS), term };
term = factor, { (MULTIPLY | DIVIDE | MOD), factor };
factor = paren_expr | INT | FLOAT | IDENTIFIER;
paren_expr = "(", expr, ")";